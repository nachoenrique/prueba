{"ast":null,"code":"import _slicedToArray from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ait/prueba/src/componentes/BadgesList.js\";\nimport React from \"react\";\nimport Gravatar from \"./Gravatar\";\nimport \"./styles/BadgesList.css\";\nimport { Link } from \"react-router-dom\";\n\nvar BadgesListItem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgesListItem, _React$Component);\n\n  function BadgesListItem() {\n    _classCallCheck(this, BadgesListItem);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BadgesListItem).apply(this, arguments));\n  }\n\n  _createClass(BadgesListItem, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"BadgesListItem\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(Gravatar, {\n        className: \"BadgesListItem__avatar\",\n        email: this.props.badge.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, this.props.badge.firstName, \" \", this.props.badge.lastName), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), \"@\", this.props.badge.twitter, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), this.props.badge.jobTitle));\n    }\n  }]);\n\n  return BadgesListItem;\n}(React.Component);\n\nfunction SearchBadge(badges) {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      query = _React$useState2[0],\n      setQuery = _React$useState2[1];\n\n  var _React$useState3 = React.useState(badges),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      filteredBadges = _React$useState4[0],\n      setFilteredBadges = _React$useState4[1];\n\n  React.useMemo(function () {\n    var result = badges.filter(function (badge) {\n      return \"\".concat(badge.firstName, \" \").concat(badge.lastName).toLowerCase().includes(query.toLowerCase());\n    });\n    setFilteredBadges(result);\n  }, [badges, query]);\n  return {\n    query: query,\n    setQuery: setQuery,\n    filteredBadges: filteredBadges\n  };\n}\n\nfunction BadgesList(props) {\n  var badges = props.badges;\n\n  var _SearchBadge = SearchBadge(badges),\n      query = _SearchBadge.query,\n      setQuery = _SearchBadge.setQuery,\n      filteredBadges = _SearchBadge.filteredBadges;\n\n  if (filteredBadges.length === 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"from-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Filter Badges\"), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control mb-4\",\n      value: query,\n      onChange: function onChange(e) {\n        return setQuery(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"No badges were found\"), React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/badges/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Create new badge\"));\n  }\n\n  return React.createElement(\"div\", {\n    className: \"BadgesList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"from-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Filter Badges\"), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control mb-4\",\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, filteredBadges.map(function (badge) {\n    return React.createElement(\"li\", {\n      key: badge.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"text-reset text-decoration-none\",\n      to: \"/badges/\".concat(badge.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(BadgesListItem, {\n      badge: badge,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })));\n  })));\n}\n\nexport default BadgesList;","map":{"version":3,"sources":["/home/ait/prueba/src/componentes/BadgesList.js"],"names":["React","Gravatar","Link","BadgesListItem","props","badge","email","firstName","lastName","twitter","jobTitle","Component","SearchBadge","badges","useState","query","setQuery","filteredBadges","setFilteredBadges","useMemo","result","filter","toLowerCase","includes","BadgesList","length","e","target","value","map","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,yBAAP;AACA,SAASC,IAAT,QAAqB,kBAArB;;IAEMC,c;;;;;;;;;;;;;6BACK;AACP,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,KAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWC,KAAX,CAAiBE,SADpB,OACgC,KAAKH,KAAL,CAAWC,KAAX,CAAiBG,QADjD,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,OAIU,KAAKJ,KAAL,CAAWC,KAAX,CAAiBI,OAJ3B,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAMG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,QANpB,CANF,CADF;AAiBD;;;;EAnB0BV,KAAK,CAACW,S;;AAsBnC,SAASC,WAAT,CAAqBC,MAArB,EAA6B;AAAA,wBACDb,KAAK,CAACc,QAAN,CAAe,EAAf,CADC;AAAA;AAAA,MACpBC,KADoB;AAAA,MACbC,QADa;;AAAA,yBAEiBhB,KAAK,CAACc,QAAN,CAAeD,MAAf,CAFjB;AAAA;AAAA,MAEpBI,cAFoB;AAAA,MAEJC,iBAFI;;AAI3BlB,EAAAA,KAAK,CAACmB,OAAN,CAAc,YAAM;AAClB,QAAMC,MAAM,GAAGP,MAAM,CAACQ,MAAP,CAAc,UAAAhB,KAAK,EAAI;AACtC,aAAO,UAAGA,KAAK,CAACE,SAAT,cAAsBF,KAAK,CAACG,QAA5B,EAAuCc,WAAvC,GAAqDC,QAArD,CAA8DR,KAAK,CAACO,WAAN,EAA9D,CAAP;AACD,KAFgB,CAAf;AAGFJ,IAAAA,iBAAiB,CAACE,MAAD,CAAjB;AACC,GALD,EAKE,CAACP,MAAD,EAASE,KAAT,CALF;AAOA,SAAO;AAACA,IAAAA,KAAK,EAALA,KAAD;AAAQC,IAAAA,QAAQ,EAARA,QAAR;AAAiBC,IAAAA,cAAc,EAAdA;AAAjB,GAAP;AACD;;AAED,SAASO,UAAT,CAAoBpB,KAApB,EAA2B;AACzB,MAAMS,MAAM,GAAGT,KAAK,CAACS,MAArB;;AADyB,qBAGiBD,WAAW,CAACC,MAAD,CAH5B;AAAA,MAGlBE,KAHkB,gBAGlBA,KAHkB;AAAA,MAGXC,QAHW,gBAGXA,QAHW;AAAA,MAGDC,cAHC,gBAGDA,cAHC;;AAKzB,MAAIA,cAAc,CAACQ,MAAf,KAA0B,CAA9B,EAAiC;AAC/B,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,mBAFZ;AAGE,MAAA,KAAK,EAAEV,KAHT;AAIE,MAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,eAAIV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVF,EAWE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAkC,MAAA,EAAE,EAAC,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAXF,CADF;AAiBD;;AAED,SACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,KAAK,EAAEb,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAW,CAAC;AAAA,aAAIV,QAAQ,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAAA,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAUE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,cAAc,CAACY,GAAf,CAAmB,UAAAxB,KAAK,EAAI;AAC3B,WACE;AAAI,MAAA,GAAG,EAAEA,KAAK,CAACyB,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,iCADZ;AAEE,MAAA,EAAE,oBAAazB,KAAK,CAACyB,EAAnB,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAEzB,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF,CADF;AAUD,GAXA,CADH,CAVF,CADF;AA2BD;;AAED,eAAemB,UAAf","sourcesContent":["import React from \"react\";\nimport Gravatar from \"./Gravatar\";\nimport \"./styles/BadgesList.css\";\nimport { Link } from \"react-router-dom\";\n\nclass BadgesListItem extends React.Component {\n  render() {\n    return (\n      <div className=\"BadgesListItem\">\n        <Gravatar\n          className=\"BadgesListItem__avatar\"\n          email={this.props.badge.email}\n        />\n\n        <div>\n          <strong>\n            {this.props.badge.firstName} {this.props.badge.lastName}\n          </strong>\n          <br />@{this.props.badge.twitter}\n          <br />\n          {this.props.badge.jobTitle}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction SearchBadge(badges) {\n  const [query, setQuery] = React.useState(\"\");\n  const [filteredBadges, setFilteredBadges] = React.useState(badges)\n\n  React.useMemo(() => {\n    const result = badges.filter(badge => {\n    return `${badge.firstName} ${badge.lastName}`.toLowerCase().includes(query.toLowerCase());\n  })\n  setFilteredBadges(result)\n  },[badges, query]);\n\n  return {query, setQuery,filteredBadges}\n}\n\nfunction BadgesList(props) {\n  const badges = props.badges;\n  \n  const {query, setQuery, filteredBadges} = SearchBadge(badges)\n\n  if (filteredBadges.length === 0) {\n    return (\n      <div>\n        <div className=\"from-group\">\n          <label>Filter Badges</label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-4\"\n            value={query}\n            onChange={e => setQuery(e.target.value)}\n          />\n        </div>\n        <h3>No badges were found</h3>\n        <Link className=\"btn btn-primary\" to=\"/badges/new\">\n          Create new badge\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"BadgesList\">\n      <div className=\"from-group\">\n        <label>Filter Badges</label>\n        <input\n          type=\"text\"\n          className=\"form-control mb-4\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n        />\n      </div>\n      <ul className=\"list-unstyled\">\n        {filteredBadges.map(badge => {\n          return (\n            <li key={badge.id}>\n              <Link\n                className=\"text-reset text-decoration-none\"\n                to={`/badges/${badge.id}`}\n              >\n                <BadgesListItem badge={badge} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default BadgesList;\n"]},"metadata":{},"sourceType":"module"}