{"ast":null,"code":"import _regeneratorRuntime from \"/home/ait/prueba/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/ait/prueba/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ait/prueba/src/pages/BadgeEdit.js\";\nimport React from 'react';\nimport './styles/BadgeEdit.css';\nimport header from \"../images/platziconf-logo.svg\";\nimport Badge from '../componentes/Badge';\nimport Formulario from '../componentes/Formulario';\nimport api from '../api';\nimport PageLoading from '../componentes/PageLoading';\n\nvar BadgeEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BadgeEdit, _React$Component);\n\n  function BadgeEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BadgeEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BadgeEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      error: null,\n      form: {\n        firstName: '',\n        lastName: '',\n        jobTitle: '',\n        email: '',\n        twitter: ''\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        form: _objectSpread({}, _this.state.form, _defineProperty({}, e.target.name, e.target.value))\n      });\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context.prev = 2;\n                _context.next = 5;\n                return api.badges.create(_this.state.form);\n\n              case 5:\n                _this.setState({\n                  loading: false\n                });\n\n                _this.props.history.push('/badges');\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n\n                _this.setState({\n                  loading: false,\n                  error: _context.t0\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loading: true,\n                  error: null\n                });\n\n                _context2.prev = 1;\n                _context2.next = 4;\n                return api.badges.read(_this.props.match.params.badgeId);\n\n              case 4:\n                data = _context2.sent;\n\n                _this.setState({\n                  loading: false,\n                  form: data\n                });\n\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](1);\n\n                _this.setState({\n                  loading: false,\n                  error: _context2.t0\n                });\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 8]]);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(BadgeEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.loading) {\n        return React.createElement(PageLoading, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"BadgeEdit__hero\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"BadgeEdit__hero-image img-fluid\",\n        src: header,\n        alt: \"Logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Badge, {\n        firstName: this.state.form.firstName || 'First_Name',\n        lastName: this.state.form.lastName || 'Last_Name',\n        twitter: this.state.form.twitter || '',\n        email: this.state.form.email || 'Email',\n        jobTitle: this.state.form.jobTitle || 'Job_Title',\n        avatarUrl: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Formulario, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        formValues: this.state.form,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return BadgeEdit;\n}(React.Component);\n\nexport default BadgeEdit;","map":{"version":3,"sources":["/home/ait/prueba/src/pages/BadgeEdit.js"],"names":["React","Badge","Formulario","api","PageLoading","BadgeEdit","state","loading","error","form","firstName","lastName","jobTitle","email","twitter","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","badges","create","props","history","push","fetchData","read","match","params","badgeId","data","header","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport'./styles/BadgeEdit.css'\nimport header from '../images/platziconf-logo.svg'\nimport Badge from '../componentes/Badge'\nimport Formulario from '../componentes/Formulario'\nimport api from '../api'\nimport PageLoading from '../componentes/PageLoading'\n\nclass BadgeEdit extends React.Component {\n    \n    state={ loading: true, error: null ,\n        form: {firstName:'' ,lastName:'', jobTitle:'', email:'', twitter:''}}\n\n    handleChange = e => {\n        this.setState({\n            form: {\n              ...this.state.form,\n              [e.target.name]: e.target.value,\n            },\n          });\n        }\n    \n    handleSubmit = async e => {\n        e.preventDefault()\n        this.setState({loading:true , error:null})\n        try{\n            await api.badges.create(this.state.form)\n            this.setState({loading:false})\n            this.props.history.push('/badges')\n        }\n        catch(error){ \n            this.setState({loading:false, error:error})\n        }\n    }\n\n     componentDidMount(){\n        this.fetchData()\n     }\n\n     fetchData = async e => {\n         this.setState({loading:true, error: null}) \n\n         try {\n             const data = await api.badges.read(this.props.match.params.badgeId)\n             this.setState({loading: false, form: data})\n         }\n         catch(error){\n            this.setState({loading: false, error: error})\n         }\n     }\n\n    render(){\n\n        if(this.state.loading){\n            return <PageLoading />\n        }\n        return(\n            <React.Fragment>\n                \n                \n                <div className=\"BadgeEdit__hero\">\n                    <img className=\"BadgeEdit__hero-image img-fluid\" src={header} alt=\"Logo\"/>\n                </div>\n                \n                <div className=\"container\">\n                    \n                    <div className=\"row\">\n                        \n                        <div className=\"col-6\">\n                            <Badge firstName={this.state.form.firstName || 'First_Name'} \n                            lastName={this.state.form.lastName || 'Last_Name'} \n                            twitter={this.state.form.twitter || ''}\n                            email={this.state.form.email || 'Email'}\n                            jobTitle={this.state.form.jobTitle || 'Job_Title'} \n                            avatarUrl=\"\" />\n                        </div>\n\n                        <div>\n                            <div className=\"col-6\">\n                                <Formulario onChange={this.handleChange} onSubmit={this.handleSubmit} formValues={this.state.form } error={this.state.error}/>\n                            </div>\n                        </div>\n\n\n                    </div>\n                \n                </div>\n            \n            </React.Fragment>\n        )\n    }\n}\n\nexport default BadgeEdit"]},"metadata":{},"sourceType":"module"}